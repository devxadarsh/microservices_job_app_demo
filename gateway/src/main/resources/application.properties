spring.application.name=gateway
server.port=8084

#Eureka
eureka.client.service-url.defaultZone=http://localhost:8761/eureka/
eureka.client.fetch-registry=true
eureka.client.register-with-eureka=true

#Zipkin
management.tracing.sampling.probability=1.0

#Gateway
spring.cloud.gateway.mvc.routes[0].id=company_service
#spring.cloud.gateway.mvc.routes[0].uri=http://localhost:8081
#instead of using hardcoded path we can use load balancing which is provided by Gateway API
#We use lb for load balancing and Service name(Given by Eureka server{generally in uppercase}) in the place of port
spring.cloud.gateway.mvc.routes[0].uri=lb://COMPANY-SERVICE
spring.cloud.gateway.mvc.routes[0].predicates[0]=Path=/company/**

spring.cloud.gateway.mvc.routes[1].id=job_service
spring.cloud.gateway.mvc.routes[1].uri=lb://JOB-SERVICE-DEV
spring.cloud.gateway.mvc.routes[1].predicates[0]=Path=/jobms/**

spring.cloud.gateway.mvc.routes[2].id=review_service
spring.cloud.gateway.mvc.routes[2].uri=lb://REVIEW-SERVICE
spring.cloud.gateway.mvc.routes[2].predicates[0]=Path=/reviews/**

spring.cloud.gateway.mvc.routes[3].id=eureka-server
spring.cloud.gateway.mvc.routes[3].uri=http://localhost:8761
spring.cloud.gateway.mvc.routes[3].predicates[0]=Path=/eureka/main
spring.cloud.gateway.mvc.routes[3].filters[0]=SetPath=/

##We can also use this configuration if our application is not loading static files like javascript, HTML
##for now I don't need of  this so that I am going to comment it out.
#spring.cloud.gateway.mvc.routes[4].id=eureka-server-static
#spring.cloud.gateway.mvc.routes[4].uri=http://localhost:8761
#spring.cloud.gateway.mvc.routes[4].predicates[0]=Path=/eureka/**

logging.level.root=info
logging.level.org.springframework.cloud.gateway=trace
logging.level.org.springframework.cloud.gateway.server.mvc.GatewayServerMvcAutoConfiguration=info
logging.level.org.springframework.cloud.gateway.route.RouteDefinationLocater=info
